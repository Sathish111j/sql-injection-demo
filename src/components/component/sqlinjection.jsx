/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/OaW0qQEFCVN
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Arimo } from 'next/font/google'
import { Libre_Franklin } from 'next/font/google'

arimo({
  subsets: ['latin'],
  display: 'swap',
})

libre_franklin({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/

/** Add border radius CSS variable to your global CSS:

:root {
  --radius: 0.375rem;
}
**/
import { CardTitle, CardHeader, CardContent, Card } from "@/components/ui/card"
import { Label } from "@/components/ui/label"
import { Input } from "@/components/ui/input"
import { Button } from "@/components/ui/button"

export function Sqlinjection() {
  const [file, setFile] = useState(null);
  const [fileName, setFileName] = useState('');
  const [uploaded, setUploaded] = useState(false);
  const [imagePath, setImagePath] = useState('');
  const [error, setError] = useState('');

  const handleFileChange = (e) => {
    setFile(e.target.files[0]);
  };

  const handleFileNameChange = (e) => {
    setFileName(e.target.value);
  };

  const handleSubmit = async () => {
    if (!file) {
      setError('Please select a file');
      return;
    }

    const formData = new FormData();
    formData.append('image', file);

    try {
      await axios.post('http://localhost:3000/upload', formData); // Updated URL
      setUploaded(true);
      setError('');
    } catch (err) {
      console.error('Error uploading file:', err);
      setError('Error uploading file. Please try again.');
    }
  };

  const handleRetrieve = async () => {
    try {
      const response = await axios.get(`http://localhost:3000/file/${fileName}`); // Updated URL
      setImagePath(response.data);
        setError('');
        console.log(imagePath)
    } catch (err) {
        
      console.error('Error retrieving file:', err);
      setImagePath('');
      setError('Error retrieving file. Please check the file name.');
    }
  };
  return (
    (<div
      key="1"
      className="grid grid-cols-1 md:grid-cols-[300px_1fr] gap-6 p-6 md:p-12 bg-gray-950 text-gray-50">
      <div
        className="bg-blue-900/10 border border-gray-200 border-blue-700 rounded-lg p-6 space-y-4 dark:border-gray-800">
        <h2 className="text-blue-400 font-bold">Caution: SQL Vulnerability</h2>
        <p className="text-blue-500">
          This page is vulnerable to SQL injection attacks. Please be cautious when entering any data.
        </p>
      </div>
      <div className="grid gap-6">
        <Card
          className="bg-gray-900 border border-gray-200 border-gray-800 dark:border-gray-800">
          <CardHeader>
            <CardTitle className="text-white">Enter Username</CardTitle>
          </CardHeader>
          <CardContent>
            <form className="space-y-4">
              <div className="space-y-1.5">
                <Label className="text-gray-300" htmlFor="username">
                  Username
                </Label>
                <Input
                  className="bg-gray-800 text-gray-50 border-gray-700"
                  id="username"
                  placeholder="Enter username" />
              </div>
              <Button
                className="w-full bg-blue-500 hover:bg-blue-600 text-gray-50"
                type="submit">
                Submit
                onClick={handleSubmit}
              </Button>
              {uploaded && <p>File uploaded successfully!</p>}
      {error && <p style={{ color: 'red' }}>{error}</p>}
            </form>
          </CardContent>
        </Card>
        <Card
          className="bg-gray-900 border border-gray-200 border-gray-800 dark:border-gray-800">
          <CardHeader>
            <CardTitle className="text-gray-200">File Paths</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-2">
              <p className="text-gray-300">The following file paths are associated with the entered username:</p>
              <ul className="space-y-1 list-disc pl-5 text-gray-400">
                <li>/path/to/file1.txt</li>
                <li>/path/to/file2.txt</li>
                <li>/path/to/file3.txt</li>
              </ul>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>)
  );
}
